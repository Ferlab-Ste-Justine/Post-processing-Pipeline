/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run ferlab/postprocessing -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.GB'
    max_time   = '6.h'

    // Input and output
    input  = "$projectDir/assets/TestSampleSheet.csv"
    outdir = "$projectDir/results"
    referenceGenome = "https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/"
    referenceGenomeFasta = "genome.fasta"
    intervalsFile = "$projectDir/assets/testInterval22.txt"
    broad = "$projectDir/data-test/reference/broad"
    vepCache = "$projectDir/data-test/reference/annotation/.vep"
    hardFilters = [[name: 'QD2', expression: 'QD < 2.0'],
		           [name: 'QD1', expression: 'QD < 1.0'],
                   [name: 'QUAL30', expression: 'QUAL < 30.0'],
                   [name: 'SOR3', expression: 'SOR > 3.0'],
                   [name: 'FS60', expression: 'FS > 60.0'],
                   [name: 'MQ40', expression: 'MQ < 40.0'],
                   [name: 'MQRankSum-12.5', expression: 'MQRankSum < -12.5'],
                   [name: 'ReadPosRankSum-8', expression: 'ReadPosRankSum < -8.0']]


    // Stub values are used for these parameters. They will be replaced with actual values when our test data setup is 
    // ready.
    intervalsFile = "interval_long_local.list"
    broad = "broad"
    referenceGenome = "reference/Genome/directory"
    referenceGenomeFasta = "genome.fasta"
    vepCache = "vepCache"
}
process {
    withName: BCFTOOLS_FILTER {
        container = 'staphb/bcftools:1.20'
        ext.args = {'-e \'strlen(REF)>1 & strlen(REF)==strlen(ALT) & TYPE="snp"\' -Oz --write-index=tbi'}
        ext.prefix = {meta.familyId + "." + meta.sample + ".filtered"}
    }

    withName: BCFTOOLS_NORM {
        container = 'staphb/bcftools:1.20'
        ext.args = {'-c w -d all -Oz --write-index=tbi'}
        ext.prefix = {meta.familyId + "." + meta.sample + ".normalized"}
    }
}
