/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines parameters and configuration settings required to run a fast and simple pipeline test.

    To run the pipeline in stub mode, you can use this command:
        nextflow  run Ferlab-Ste-Justine/Post-processing-Pipeline -r main  -stub -profile test,docker --input assets/testSampleSheet.csv
     
    To run the pipeline without using stub mode, we have a test dataset available, but it must 
    be downloaded manually. Ask the bioinformatics team for its location. If you download the dataset 
    archive (.tar.gz) and extract it at the root of this  repository (tar -xzf <archive file>), you should 
    be able to run the pipeline with the following command:

        nextflow run  Ferlab-Ste-Justine/Post-processing-Pipeline -r main -profile test,docker
    
----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.GB'
    max_time   = '6.h'

    // Input and output
    input  = "data-test/testSampleSheet.csv"
    outdir = "results"
    publish_all = true

    // Reference data
    referenceGenome = "data-test/reference/Homo_sapiens_assembly38/chr22"
    referenceGenomeFasta = "chr22.fa"
    intervalsFile = "data-test/reference/broad/testInterval22.list"
    broad = "data-test/reference/broad"

    //Vep
    vep_cache = "data-test/reference/annotation/.vep"
    vep_cache_version = "111"
    vep_genome = "GRCh38"

    // Filters for hard filtering
    hardFilters = [[name: 'QD2', expression: 'QD < 2.0'],
		           [name: 'QD1', expression: 'QD < 1.0'],
                   [name: 'QUAL30', expression: 'QUAL < 30.0'],
                   [name: 'SOR3', expression: 'SOR > 3.0'],
                   [name: 'FS60', expression: 'FS > 60.0'],
                   [name: 'MQ40', expression: 'MQ < 40.0'],
                   [name: 'MQRankSum-12.5', expression: 'MQRankSum < -12.5'],
                   [name: 'ReadPosRankSum-8', expression: 'ReadPosRankSum < -8.0']]
    
    tools = "vep,exomiser"

    // Exomiser parameters
    exomiser_data_dir = "data-test/reference/exomiser"
    exomiser_data_version = "2402"
    exomiser_genome = "hg38"
    exomiser_cadd_version = "1.7"
    exomiser_cadd_indel_filename = "gnomad.genomes.r4.0.indel.tsv.gz"
    exomiser_cadd_snv_filename  =  "whole_genome_SNVs.tsv.gz"
    exomiser_remm_version = "0.3.1.post1"
    exomiser_remm_filename = "ReMM.v0.3.1.post1.hg38.tsv.gz"
    exomiser_analysis_wes = "${projectDir}/assets/exomiser/test_exomiser_analysis.yml"
    exomiser_analysis_wgs = "${projectDir}/assets/exomiser/test_exomiser_analysis.yml"
    exomiser_local_frequency_path = "${projectDir}/assets/exomiser/local/local_frequency_test_hg38.tsv.gz"
    exomiser_local_frequency_index_path = "${projectDir}/assets/exomiser/local/local_frequency_test_hg38.tsv.gz.tbi"


    // To be able to run on our public test dataset, which is aligned with an older version of GATK4
    allow_old_gatk_data = true
}